/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subs_control;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author AlbertusK95
 */
public class NDPrivChatDialog extends javax.swing.JDialog {

    private final String path_to_users = "C:\\Users\\AlbertusK95\\Documents\\NetBeansProjects\\SayHI\\users\\subscriber\\";
    private String pengirim;
    private String penerima;
    
    /**
     * Creates new form NDPrivChatDialog
     * @param parent
     * @param pengirim
     * @param penerima
     */
    public NDPrivChatDialog(SubsHome parent, String pengirim, String penerima) {
        super(parent, false);
        this.pengirim = pengirim;
        this.penerima = penerima;
        setLocationRelativeTo(parent);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaNDChat = new javax.swing.JTextArea();
        txtNDChatPost = new javax.swing.JTextField();
        btnNDChatSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtareaNDChat.setColumns(20);
        txtareaNDChat.setRows(5);
        jScrollPane1.setViewportView(txtareaNDChat);

        txtNDChatPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNDChatPostActionPerformed(evt);
            }
        });

        btnNDChatSend.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnNDChatSend.setText("Send");
        btnNDChatSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNDChatSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNDChatPost, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNDChatSend)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNDChatPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNDChatSend, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void display(String res) {
        txtareaNDChat.setText(txtareaNDChat.getText() + res + "\n");
    }
    
    /**
     * Prosedur mengecek apakah file friendlist.txt kosong atau tidak
     */
    private boolean isSubsFileEmpty(String userSender, String userReceiver) {
        BufferedReader br = null;
        boolean isEmpty = false;

        try {
            br = new BufferedReader(new FileReader(path_to_users + userSender + "\\chathistory\\" + userReceiver + ".txt"));     
            if (br.readLine() == null) {
                System.out.println("File " + userReceiver + ".txt for " + userSender + " is empty");
                isEmpty = true;
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        return isEmpty;
    }

    private void sendToChatFile(String msg, String userSender, String userReceiver) {
        
        try {
            File fileChat = new File(path_to_users + userSender + "\\chathistory\\" + userReceiver + ".txt");
            
            if (!fileChat.exists()) {
                if (fileChat.createNewFile()){
                    System.out.println("File " + userReceiver + ".txt for " + userSender + " is created");
                } else{
                    System.out.println("File " + userReceiver + ".txt for " + userSender + " already exists");
                }
            }
          
            FileWriter fw = new FileWriter(fileChat.getAbsoluteFile(), true);
            BufferedWriter bw = new BufferedWriter(fw);
            if (isSubsFileEmpty(userSender, userReceiver)) {
                bw.write(msg);
            } else {
                bw.newLine();
                bw.write(msg);
            }
            bw.close();
        } catch (IOException e) {
            e.printStackTrace();
        } 
    }
    
    private void txtNDChatPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNDChatPostActionPerformed
        btnNDChatSendActionPerformed(evt);
    }//GEN-LAST:event_txtNDChatPostActionPerformed

    private void btnNDChatSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNDChatSendActionPerformed
        
        String msg = pengirim + ": " + txtNDChatPost.getText();
        
        // mengirim pesan yang ditulis ke text area
        display(msg + "\n");
        
        // mengirimkan pesan yang ditulis ke dalam file chat history pengirim
        sendToChatFile(msg, pengirim, penerima);
        
        // mengirimkan pesan yang ditulis ke dalam file chat history penerima
        sendToChatFile(msg, penerima, pengirim);
        
        // menghapus pesan pada text box
        txtNDChatPost.setText("");
    }//GEN-LAST:event_btnNDChatSendActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNDChatSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNDChatPost;
    private javax.swing.JTextArea txtareaNDChat;
    // End of variables declaration//GEN-END:variables
}
